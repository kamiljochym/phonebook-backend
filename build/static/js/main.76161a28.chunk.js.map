{"version":3,"sources":["components/Filter.js","plus.svg","components/PersonForm.js","trash-2.svg","edit.svg","check.svg","components/Persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","handleNewSearch","className","placeholder","onChange","PersonForm","newName","newNumber","handleNewName","handleNewNumber","addName","id","value","defaultCountry","onClick","src","plusIcon","Persons","persons","deleteName","editName","finishEdit","handleEdit","map","person","Idx","name","inEdit","type","defaultValue","number","checkIcon","height","editIcon","deleteIcon","Notification","alertMessage","setShowAlert","App","useRef","useState","personsToDisplay","setPersonsToDisplay","setNewName","setNewNumber","editingId","setEditingId","editingNumber","setEditingNumber","showAlert","setAlertMessage","useEffect","axios","get","then","response","data","current","event","target","preventDefault","console","log","nameObject","String","Date","now","formatPhoneNumberIntl","length","document","getElementById","style","border","isValidPhoneNumber","post","concat","catch","error","window","alert","searchName","toLowerCase","filteredPersons","filter","includes","personToDelete","confirm","delete","newPersonList","personToEdit","find","updatedPerson","put","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.76161a28.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({handleNewSearch}) => {\n    return (\n        <div className=\"search\"><input placeholder=\"Search...\" onChange={handleNewSearch}/></div>\n    )\n}\n\nexport default Filter;\n\n","export default __webpack_public_path__ + \"static/media/plus.887d2aad.svg\";","import React from \"react\";\nimport PhoneInput from 'react-phone-number-input'\nimport plusIcon from '../plus.svg'\n\n\nconst PersonForm = ({newName, newNumber, handleNewName, handleNewNumber, addName}) => {\n    \n \n  return (\n      <form className=\"personform\">\n        <div>\n          <input id=\"namebox\" placeholder=\"Enter Name\" value={newName} onChange={handleNewName}/>\n        </div>\n        \n          <PhoneInput id=\"numberbox\" defaultCountry=\"GB\" placeholder=\"Enter Number\" value={newNumber} onChange={handleNewNumber} />\n          {/* <input placeholder=\"Enter Number\" value={newNumber} onChange={handleNewNumber}/> */}\n        \n        <div>\n          <button onClick={addName}><img src={plusIcon}></img></button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm;\n\n","export default __webpack_public_path__ + \"static/media/trash-2.bba7f8a9.svg\";","export default __webpack_public_path__ + \"static/media/edit.f9a98551.svg\";","export default __webpack_public_path__ + \"static/media/check.a6151888.svg\";","import React from \"react\";\nimport PersonForm from \"./PersonForm\";\nimport deleteIcon from '../trash-2.svg'\nimport editIcon from '../edit.svg'\nimport checkIcon from '../check.svg'\n\nconst Persons = ({ persons, deleteName, editName, finishEdit, handleEdit }) => {\n    return (\n        <div className=\"phonebook\">\n            {persons.map((person, Idx) => (\n                    <div className=\"phonebook-entry\" key={Idx}>\n                        <div className=\"phonebook-entry-details\">\n                            <div className=\"phonebook-entry-details-name\">{person.name}</div>\n                            {person.inEdit \n                                ? <input id={'p'+person.id} type=\"text\" defaultValue={person.number} onChange={handleEdit}/>\n                                : <div className=\"phonebook-entry-details-number\">{person.number}</div>  \n                            }\n                        </div>\n                        <div className=\"phonebook-entry-buttons\">\n                            {person.inEdit \n                                ?  <button className=\"phonebook-entry-buttons-finish\" onClick={() => finishEdit(person)}> <img src={checkIcon} height={'20px'}></img>  </button>\n                                :  <button className=\"phonebook-entry-buttons-edit\" onClick={() => editName(person)}> <img src={editIcon} height={'20px'}></img> </button>\n                            }\n                            <button className=\"phonebook-entry-buttons-delete\" onClick={() => deleteName(person)}><img src={deleteIcon} height={'20px'}></img> </button>\n                        </div>\n                    </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Persons;","import React from \"react\";\n\nconst Notification = ({ alertMessage, setShowAlert }) => {\n    return (\n        <div className=\"notification-container\">\n            <div>{alertMessage}</div>\n            <button onClick={() => setShowAlert(false)}>x</button>\n        </div>\n    )\n}\n\nexport default Notification;","import React, {useState, useEffect, useRef} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './phonenumbers.css'\nimport './App.scss'\nimport axios from 'axios'\nimport {isValidPhoneNumber, formatPhoneNumberIntl} from 'react-phone-number-input'\n\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\nfunction App() {\n  const persons = useRef([])\n  const [personsToDisplay, setPersonsToDisplay] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [editingId, setEditingId] = useState(null)\n  const [editingNumber, setEditingNumber] = useState(null)\n\n  const [showAlert, setShowAlert] = useState(false)\n  const [alertMessage, setAlertMessage] = useState('')\n\n  useEffect(() => {\n    axios.get('/api/persons').then((response) => {\n      setPersonsToDisplay(response.data)\n    })\n  }, [])\n\n  //grabs up to date info from database\n  useEffect(() => {\n    axios.get('/api/persons').then((response) => {\n      persons.current = response.data\n    })\n  })\n\n  const addName = (event) => {\n    event.preventDefault()\n    console.log(newNumber)\n    const nameObject = {\n      id: String(Date.now()),\n      name: newName,\n      number: formatPhoneNumberIntl(newNumber),\n      inEdit: false,\n    }\n\n    console.log(nameObject)\n\n    if (newName.length === 0 || !newNumber) {\n      setShowAlert(true)\n      setAlertMessage('Please enter a Name and Number')\n      document.getElementById('namebox').style.border = 'solid 1px red'\n      document.getElementById('numberbox').style.border = 'solid 1px red'\n      return\n    }\n    //reset borders\n    document.getElementById('namebox').style.border = 'none'\n    document.getElementById('numberbox').style.border = 'none'\n\n    if (!isValidPhoneNumber(newNumber)) {\n      window.alert('Phone number must be valid!')\n      document.getElementById('numberbox').style.border = 'solid 1px red'\n      setShowAlert(true)\n      return\n    }\n\n    //Adding new name to phonebook\n    axios\n      .post('/api/persons', nameObject)\n      .then((response) => {\n        console.log(response)\n        setPersonsToDisplay(persons.current.concat(nameObject))\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  const editName = (personToEdit) => {\n    if (editingId !== null) {\n      personsToDisplay.find((person) => person.id === editingId).inEdit = false\n      setEditingId(personToEdit.id)\n    }\n    personToEdit.inEdit = true\n    setEditingId(personToEdit.id)\n    setEditingNumber(personToEdit.number)\n  }\n\n  const finishEdit = (personToEdit) => {\n    personToEdit.inEdit = false\n\n    if (!isValidPhoneNumber(editingNumber)) {\n      window.alert('Phone number must be valid')\n      setEditingId(null)\n      return\n    }\n\n    const updatedPerson = {\n      id: personToEdit.id,\n      name: personToEdit.name,\n      number: editingNumber,\n    }\n    axios\n      .put(`/api/persons/${personToEdit.id}`, updatedPerson)\n      .then((response) => {\n        const newPersonList = persons.current.map((person) =>\n          person.id === updatedPerson.id ? updatedPerson : person\n        )\n        setPersonsToDisplay(newPersonList)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n    setEditingId(null) //forces the textbox to update\n  }\n\n  const deleteName = (personToDelete) => {\n    if (window.confirm(`Are you sure you want to delete ${personToDelete.name}`)) {\n      console.log(personToDelete)\n      axios\n        .delete(`/api/persons/${personToDelete.id}`)\n        .then((response) => {\n          const newPersonList = persons.current.filter(\n            (person) => person.id !== personToDelete.id\n          )\n          setPersonsToDisplay(newPersonList)\n        })\n        .catch((error) => {\n          console.log('error in deletion')\n        })\n    }\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleEdit = (event) => {\n    setEditingNumber(event.target.value)\n  }\n\n  const handleNewSearch = (event) => {\n    const searchName = event.target.value.toLowerCase()\n\n    if (searchName === '') {\n      setPersonsToDisplay(persons.current)\n      return\n    }\n    const filteredPersons = persons.current.filter((person) =>\n      person.name.toLowerCase().includes(searchName)\n    )\n    setPersonsToDisplay(filteredPersons)\n  }\n\n  const handlAlertOff = () => {\n    setShowAlert(false)\n  }\n\n  return (\n    <div className='container'>\n      <h2>Online Phonebook</h2>\n\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNewName={handleNewName}\n        handleNewNumber={setNewNumber}\n        addName={addName}\n      />\n\n      <Filter handleNewSearch={handleNewSearch} />\n\n      {showAlert ? (\n        <Notification setShowAlert={setShowAlert} alertMessage={alertMessage} />\n      ) : (\n        <></>\n      )}\n\n      <Persons\n        persons={personsToDisplay}\n        deleteName={deleteName}\n        editName={editName}\n        finishEdit={finishEdit}\n        handleEdit={handleEdit}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}